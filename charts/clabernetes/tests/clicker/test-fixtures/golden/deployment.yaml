---
# Source: clabernetes/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: clabernetes-plus-clicker-manager
  namespace: clabernetes
  labels:
    chart: "clabernetes-0.0.16"
    release: release-name
    heritage: Helm
    clabernetes/app: clabernetes-plus-clicker
    clabernetes/name: "clabernetes-plus-clicker-manager"
    clabernetes/component: manager
    anotherlabel: anotherlabelvalue
    somelabel: somelabelvalue
  annotations:
    annotherannotation: anotherannotationvalue
    someannotation: someannotationvalue
spec:
  selector:
    matchLabels:
      clabernetes/app: clabernetes-plus-clicker
      release: release-name
  replicas: 3
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        chart: "clabernetes-0.0.16"
        release: release-name
        heritage: Helm
        clabernetes/app: clabernetes-plus-clicker
        clabernetes/name: "clabernetes-plus-clicker-manager"
        clabernetes/component: manager
        anotherlabel: anotherlabelvalue
        somelabel: somelabelvalue
      annotations:
        annotherannotation: anotherannotationvalue
        someannotation: someannotationvalue
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    clabernetes/app: clabernetes-plus-clicker
                    clabernetes/name: "clabernetes-plus-clicker-manager"
                    clabernetes/component: manager
                topologyKey: kubernetes.io/hostname
            - weight: 50
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    clabernetes/app: clabernetes-plus-clicker
                    clabernetes/name: "clabernetes-plus-clicker-manager"
                    clabernetes/component: manager
                topologyKey: topology.kubernetes.io/zone
      terminationGracePeriodSeconds: 10
      serviceAccountName: "clabernetes-plus-clicker-service-account"
      initContainers:
        - name: init
          image: "ghcr.io/srl-labs/clabernetes/clabernetes-manager:0.0.16"
          imagePullPolicy: IfNotPresent
          command: ["/clabernetes/manager", "run", "--initializer"]
          env:
            - name: APP_NAME
              value: clabernetes-plus-clicker
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: MANAGER_LOGGER_LEVEL
              value: info
          resources:
            requests:
              memory: 128Mi
              cpu: 50m
      containers:
        - name: manager
          image: "ghcr.io/srl-labs/clabernetes/clabernetes-manager:0.0.16"
          imagePullPolicy: IfNotPresent
          command: ["/clabernetes/manager", "run"]
          env:
            - name: APP_NAME
              value: clabernetes-plus-clicker
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CLIENT_OPERATION_TIMEOUT_MULTIPLIER
              value: "1"
            - name:  IN_CLUSTER_DNS_SUFFIX
              value: svc.cluster.local
            - name: MANAGER_LOGGER_LEVEL
              value: info
            - name: CONTROLLER_LOGGER_LEVEL
              value: info
            - name: LAUNCHER_LOGGER_LEVEL
              value: info
            - name: LAUNCHER_PULL_POLICY
              value: "IfNotPresent"
            - name: LAUNCHER_IMAGE
              value: "ghcr.io/srl-labs/clabernetes/clabernetes-launcher:0.0.16"
          resources:
            requests:
              memory: 128Mi
              cpu: 50m
          ports:
          - name: readiness-port
            containerPort: 8080
          readinessProbe:
            httpGet:
              path: /ready
              port: readiness-port
            successThreshold: 1
