---
stages:
  - lint
  - test
  - build
  - release
  - container_scanning

variables:
  GOFUMPT_VERSION: v0.5.0
  GOIMPORTS_VERSION: v0.5.0
  GOLINES_VERSION: v0.11.0
  GOLANGCI_LINT_VERSION: v1.54.1
  GOTESTSUM_VERSION: v1.10.1
  DEVSPACE_VERSION: v6.3.2
  HELM_VERSION: "3.11"
  GITHUB_REGISTRY_USER: carlmontanari
  GITLAB_REGISTRY_USER: clabernetes-registry-write-token

.install_go_lint_tools: &install_go_lint_tools
  - go install mvdan.cc/gofumpt@$GOFUMPT_VERSION
  - go install golang.org/x/tools/cmd/goimports@$GOIMPORTS_VERSION
  - go install github.com/segmentio/golines@$GOLINES_VERSION
  - curl -sSfL
    https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh |
    sh -s -- -b $(go env GOPATH)/bin $GOLANGCI_LINT_VERSION

.install_go_test_tools:
  - go install gotest.tools/gotestsum@$GOTESTSUM_VERSION

.install_common_tools: &install_common_tools
  - apk add curl git

.install_devspace: &install_devspace
  - curl -L -o devspace
    "https://github.com/loft-sh/devspace/releases/download/$DEVSPACE_VERSION/devspace-linux-amd64" &&
    install -c -m 0755 devspace /usr/local/bin

.install_helm: &install_helm
  - apk add helm~=$HELM_VERSION

.install_release_tool: &install_release_tool
  - curl --location --output /usr/local/bin/release-cli
    "https://gitlab.com/api/v4/projects/gitlab-org%2Frelease-cli/packages/generic/release-cli/latest/release-cli-linux-amd64" &&
    chmod +x /usr/local/bin/release-cli

.registry_login: &registry_login
  - docker login -u $GITHUB_REGISTRY_USER -p $GITHUB_REGISTRY_TOKEN ghcr.io
  - docker login -u $GITLAB_REGISTRY_USER -p $GITLAB_REGISTRY_TOKEN $CI_REGISTRY

.build_release_template: &build_release_template
  image: docker:24.0.2
  services:
    - docker:24.0.2-dind

lint:
  stage: lint
  needs: []
  rules:
    # if on main branch or a mr pointing to main branch, also run on tags (releases)
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_TAG

  image: golang:1.20

  script:
    - *install_go_lint_tools
    - go mod tidy
    - make lint

test:
  stage: test
  needs:
    - lint
  rules:
    # if on main branch or a mr pointing to main branch, also run on tags (releases)
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_TAG

  image: golang:1.20

  script:
    - *install_go_lint_tools
    - go mod tidy
    - make test-race

build:
  stage: build
  needs:
    - job: lint
  rules:
    # never run build on tagged commits, we run release then
    - exists:
        - $CI_COMMIT_TAG
      when: never
    # *do* run it on commits to main and mrs pointing to main
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH

  <<: *build_release_template

  script:
    - *install_common_tools
    - *registry_login
    - *install_devspace
    - *install_helm

    - devspace run build --tag $CI_COMMIT_SHORT_SHA

    - >
      if [[ "$CI_COMMIT_BRANCH" != "$CI_DEFAULT_BRANCH" ]]; then
        echo "we are not on main branch, not pushing images or chart to ghcr"
        exit 0
      fi

    - REGISTRY=ghcr.io/carlmontanari/clabernetes devspace run build

    - helm registry login -u $GITHUB_REGISTRY_USER -p $GITHUB_REGISTRY_TOKEN ghcr.io
    - helm package chart --version v0.0.0
    - helm push clabernetes-v0.0.0.tgz oci://ghcr.io/carlmontanari/clabernetes

release:
  stage: release
  needs:
    - job: lint
      optional: true
    - job: test
      optional: true
  rules:
    # only run on tagged commit (releases)
    - if: $CI_COMMIT_TAG

  release:
    tag_name: '$CI_COMMIT_TAG'
    description: '$CI_COMMIT_TAG'

  <<: *build_release_template

  script:
    - *install_common_tools
    - *install_release_tool
    - *registry_login
    - *install_devspace
    - *install_helm

    - devspace run build --tag $CI_COMMIT_SHORT_SHA

    - REGISTRY=ghcr.io/carlmontanari/clabernetes devspace run build --profile release --var RELEASE_VERSION=$CI_COMMIT_TAG

    - helm registry login -u $GITHUB_REGISTRY_USER -p $GITHUB_REGISTRY_TOKEN ghcr.io
    - helm package chart --version $CI_COMMIT_TAG
    - helm push clabernetes-$CI_COMMIT_TAG.tgz oci://ghcr.io/carlmontanari/clabernetes
