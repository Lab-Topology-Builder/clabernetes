---
name: release

on:
  release:
    types:
      - created

jobs:
  lint:
    uses: ./.github/workflows/lint.yaml

  test:
    uses: ./.github/workflows/test.yaml

  release:
    needs:
      - lint
      - test
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: load env vars for workflow run
        run: |
          source .github/vars.env
          echo "GO_VERSION=$GO_VERSION" >> "$GITHUB_ENV"
          echo "DEVSPACE_VERSION=$DEVSPACE_VERSION" >> "$GITHUB_ENV"
          echo "GCI_VERSION=$GCI_VERSION" >> "$GITHUB_ENV"
          echo "GOFUMPT_VERSION=$GOFUMPT_VERSION" >> "$GITHUB_ENV"
          echo "GOLANGCI_LINT_VERSION=$GOLANGCI_LINT_VERSION" >> "$GITHUB_ENV"
          echo "GOLINES_VERSION=$GOLINES_VERSION" >> "$GITHUB_ENV"
          echo "GOTESTSUM_VERSION=$GOTESTSUM_VERSION" >> "$GITHUB_ENV"
          echo "HELM_VERSION=$HELM_VERSION" >> "$GITHUB_ENV"

      - name: install devspace
        run: |
          curl -L -o devspace \
            "https://github.com/loft-sh/devspace/releases/download/${{ env.DEVSPACE_VERSION}}/devspace-linux-amd64" &&
            install -c -m 0755 devspace /usr/local/bin
        working-directory: /tmp

      - name: install helm
        run: |
          curl -L -o helm.tar.gz \
            "https://get.helm.sh/helm-${{ env.HELM_VERSION}}-linux-amd64.tar.gz"
          tar -zxvf helm.tar.gz
          mv linux-amd64/helm /usr/local/bin/helm
        working-directory: /tmp

      - name: login to ghcr
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: build and push images
        run: |
          RELEASE_TAG=${{ github.ref_name }}
          RELEASE_VERSION=${RELEASE_TAG#v}
          
          devspace run build --profile release --var RELEASE_VERSION=$RELEASE_VERSION

      - name: package and push charts
        run: |
          RELEASE_TAG=${{ github.ref_name }}
          RELEASE_VERSION=${RELEASE_TAG#v}
          
          helm registry login -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }} ghcr.io

          make set-chart-versions $RELEASE_VERSION

          helm package charts/clicker --version $RELEASE_VERSION
          helm push clicker-$RELEASE_VERSION.tgz oci://ghcr.io/srl-labs/clabernetes
          
          helm package charts/clabernetes --version $RELEASE_VERSION
          helm push clabernetes-$RELEASE_VERSION.tgz oci://ghcr.io/srl-labs/clabernetes
