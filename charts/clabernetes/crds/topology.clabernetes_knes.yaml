---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: knes.topology.clabernetes
spec:
  group: topology.clabernetes
  names:
    kind: Kne
    listKind: KneList
    plural: knes
    singular: kne
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Kne is an object that holds a "normal" kne topology file and
          any additional data necessary to "clabernetes-ify" it.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KneSpec is the spec for a Kne topology resource.
            properties:
              containerlabDebug:
                description: ContainerlabDebug sets the `--debug` flag when invoking
                  containerlab in the launcher pods. This is disabled by default.
                type: boolean
              disableAutoExpose:
                description: "DisableAutoExpose disables the automagic exposing of
                  ports for a given topology. When this setting is disabled clabernetes
                  will not auto add ports so if you want to expose (via a load balancer
                  service) you will need to have ports outlined in your containerlab
                  config (or equivalent for kne). When this is `false` (default),
                  clabernetes will add and expose the following list of ports to whatever
                  ports you have already defined: \n 21    - tcp - ftp 22    - tcp
                  - ssh 23    - tcp - telnet 80    - tcp - http 161   - udp - snmp
                  443   - tcp - https 830   - tcp - netconf (over ssh) 5000  - tcp
                  - telnet for vrnetlab qemu host 5900  - tcp - vnc 6030  - tcp -
                  gnmi (arista default) 9339  - tcp - gnmi/gnoi 9340  - tcp - gribi
                  9559  - tcp - p4rt 57400 - tcp - gnmi (nokia srl/sros default) \n
                  This setting is *ignored completely* if `DisableExpose` is true!"
                type: boolean
              disableExpose:
                description: DisableExpose indicates if exposing nodes via LoadBalancer
                  service should be disabled, by default any mapped ports in a containerlab
                  topology will be exposed.
                type: boolean
              filesFromConfigMap:
                description: FilesFromConfigMap is a slice of FileFromConfigMap that
                  define the configmap/path and node and path on a launcher node that
                  the file should be mounted to. If the path is not provided the configmap
                  is mounted in its entirety (like normal k8s things), so you *probably*
                  want to specify the sub path unless you are sure what you're doing!
                items:
                  description: FileFromConfigMap represents a file that you would
                    like to mount (from a configmap) in the launcher pod for a given
                    node.
                  properties:
                    configMapName:
                      description: ConfigMapName is the name of the configmap to mount.
                      type: string
                    configMapPath:
                      description: ConfigMapPath is the path/key in the configmap
                        to mount, if not specified the configmap will be mounted without
                        a sub-path.
                      type: string
                    filePath:
                      description: FilePath is the path to mount the file.
                      type: string
                    nodeName:
                      description: NodeName is the name of the node (as in node from
                        the clab topology) that the file should be mounted for.
                      type: string
                  required:
                  - configMapName
                  - filePath
                  - nodeName
                  type: object
                type: array
                x-kubernetes-list-type: atomic
              insecureRegistries:
                description: InsecureRegistries is a slice of strings of insecure
                  registries to configure in the launcher pods.
                items:
                  type: string
                type: array
              launcherLogLevel:
                description: 'LauncherLogLevel sets the launcher clabernetes worker
                  log level -- this overrides whatever is set on the controllers env
                  vars for this topology. Note: omitempty because empty str does not
                  satisfy enum of course.'
                enum:
                - disabled
                - critical
                - warn
                - info
                - debug
                type: string
              resources:
                additionalProperties:
                  description: ResourceRequirements describes the compute resource
                    requirements.
                  properties:
                    claims:
                      description: "Claims lists the names of resources, defined in
                        spec.resourceClaims, that are used by this container. \n This
                        is an alpha field and requires enabling the DynamicResourceAllocation
                        feature gate. \n This field is immutable. It can only be set
                        for containers."
                      items:
                        description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                        properties:
                          name:
                            description: Name must match the name of one entry in
                              pod.spec.resourceClaims of the Pod where this field
                              is used. It makes that resource available inside a container.
                            type: string
                        required:
                        - name
                        type: object
                      type: array
                      x-kubernetes-list-map-keys:
                      - name
                      x-kubernetes-list-type: map
                    limits:
                      additionalProperties:
                        anyOf:
                        - type: integer
                        - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      description: 'Limits describes the maximum amount of compute
                        resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                      type: object
                    requests:
                      additionalProperties:
                        anyOf:
                        - type: integer
                        - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      description: 'Requests describes the minimum amount of compute
                        resources required. If Requests is omitted for a container,
                        it defaults to Limits if that is explicitly specified, otherwise
                        to an implementation-defined value. Requests cannot exceed
                        Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                      type: object
                  type: object
                description: Resources is a mapping of nodeName (or "default") to
                  kubernetes resource requirements -- any value set here overrides
                  the "global" config resource definitions. If a key "default" is
                  set, those resource values will be preferred over *all global settings*
                  for this topology -- meaning, the "global" resource settings will
                  never be looked up for this topology, and any kind/type that is
                  *not* in this resources map will have the "default" resources from
                  this mapping applied.
                type: object
              topology:
                description: Topology is a "normal" kne topology proto file.
                type: string
            required:
            - topology
            type: object
          status:
            description: KneStatus is the status for a Kne topology resource.
            properties:
              configs:
                description: Configs is a map of node name -> clab config -- in other
                  words, this is the original containerlab configuration broken up
                  and modified to use multi-node topology setup (via host links+vxlan).
                  This is stored as a raw message so we don't have any weirdness w/
                  yaml tags instead of json tags in clab things, and so we kube builder
                  doesnt poop itself.
                type: string
              configsHash:
                description: ConfigsHash is a hash of the last stored Configs data.
                type: string
              nodeExposedPorts:
                additionalProperties:
                  description: ExposedPorts holds information about exposed ports.
                  properties:
                    loadBalancerAddress:
                      description: LoadBalancerAddress holds the address assigned
                        to the load balancer exposing ports for a given node.
                      type: string
                    tcpPorts:
                      description: TCPPorts is a list of TCP ports exposed on the
                        LoadBalancer service.
                      items:
                        type: integer
                      type: array
                      x-kubernetes-list-type: set
                    udpPorts:
                      description: UDPPorts is a list of UDP ports exposed on the
                        LoadBalancer service.
                      items:
                        type: integer
                      type: array
                      x-kubernetes-list-type: set
                  required:
                  - loadBalancerAddress
                  - tcpPorts
                  - udpPorts
                  type: object
                description: NodeExposedPorts holds a map of (containerlab) nodes
                  and their exposed ports (via load balancer).
                type: object
              nodeExposedPortsHash:
                description: NodeExposedPortsHash is a hash of the last stored NodeExposedPorts
                  data.
                type: string
              tunnels:
                additionalProperties:
                  items:
                    description: Tunnel represents a VXLAN tunnel between clabernetes
                      nodes (as configured by containerlab).
                    properties:
                      id:
                        description: ID is the VXLAN ID (vnid) for the tunnel.
                        type: integer
                      localLinkName:
                        description: LocalLinkName is the local link name for the
                          local end of the tunnel.
                        type: string
                      localNodeName:
                        description: LocalNodeName is the name of the local node for
                          this tunnel.
                        type: string
                      remoteLinkName:
                        description: RemoteLinkName is the remote link name for the
                          remote end of the tunnel.
                        type: string
                      remoteName:
                        description: RemoteName is the name of the service to contact
                          the remote end of the tunnel.
                        type: string
                      remoteNodeName:
                        description: RemoteNodeName is the name of the remote node.
                        type: string
                    required:
                    - id
                    - localLinkName
                    - localNodeName
                    - remoteLinkName
                    - remoteName
                    - remoteNodeName
                    type: object
                  type: array
                description: Tunnels is a mapping of tunnels that need to be configured
                  between nodes (nodes:[]tunnels).
                type: object
              tunnelsHash:
                description: TunnelsHash is a hash of hte last stored Tunnels data.
                  As this can change due to the dns suffix changing and not just the
                  config changing we need to independently track this state.
                type: string
            required:
            - configs
            - configsHash
            - nodeExposedPorts
            - nodeExposedPortsHash
            - tunnels
            - tunnelsHash
            type: object
        type: object
    served: true
    storage: true
